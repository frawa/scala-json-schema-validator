# Scala CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/sample-config/
version: 2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: cimg/openjdk:8.0-node

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init

      # Download and cache dependencies
      - restore_cache:
          key: sbt-cache

      - run: cat /dev/null | ./sbt compile
      - run: cat /dev/null | ./sbt lint

      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.sbt"
            - "~/.m2"

      # run tests!
      - run: cat /dev/null | ./sbt test
      - run: |
          mkdir -p test-reports/validatorJS test-reports/validatorJVM
          cp validator/.jvm/target/test-reports/* test-reports/validatorJVM
          cp validator/.js/target/test-reports/* test-reports/validatorJS
      - store_test_results:
          path: "test-reports"
